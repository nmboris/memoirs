---
export const checkbox = {
	render: "Checkbox",
	attributes: {
		status: {
			type: String,
			default: "default",
		},
		label: {
			type: String,
			default: "default label",
		},
	},
};

type Props = {
	label: string;
	status: string;
};

const { label, status } = Astro.props;
console.log(":: PROPS", Astro.props);
const id = Math.random().toString();
---

<div class="checkbox">
	<input
		id={id}
		type="checkbox"
		disabled
		checked={status.toLowerCase() === "x"}
	/>
	<label for={id}>{label}</label>
</div>

<style>
	.checkbox {
		display: flex;
		align-items: center;
		gap: var(--space-2);
		padding-block: var(--space-1);
		padding-left: var(--space-4);
	}

	/* Thanks, https://moderncss.dev/pure-css-custom-checkbox-style/ */
	input[type="checkbox"] {
		/* Add if not using autoprefixer */
		-webkit-appearance: none;
		/* Remove most all native input styles */
		appearance: none;
		/* For iOS < 15 */
		background-color: var(--form-background);
		/* Not removed via appearance */
		margin: 0;

		font: inherit;
		color: currentColor;
		width: 1.15em;
		height: 1.15em;
		border: 0.15em solid currentColor;
		border-radius: 0.15em;
		transform: translateY(-0.075em);

		display: grid;
		place-content: center;
	}

	input[type="checkbox"]::before {
		content: "";
		width: 0.65em;
		height: 0.65em;
		clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
		transform: scale(0);
		transform-origin: bottom left;
		transition: 120ms transform ease-in-out;
		box-shadow: inset 1em 1em var(--form-control-color);
		/* Windows High Contrast Mode */
		background-color: CanvasText;
	}

	input[type="checkbox"]:checked::before {
		transform: scale(1);
	}

	input[type="checkbox"]:focus {
		outline: max(2px, 0.15em) solid currentColor;
		outline-offset: max(2px, 0.15em);
	}

	input[type="checkbox"]:disabled {
		--form-control-color: var(--form-control-disabled);

		color: var(--form-control-disabled);
		cursor: not-allowed;
	}
</style>

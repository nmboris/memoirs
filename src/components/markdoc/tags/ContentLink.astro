---
import { getMemoServerCfg } from "@lib/apiHelper";
import type { APIMemoQueryResponse, MemosHost, MemoWithMeta } from "@lib/types";

import { GET } from "@api/memos.ts";
import { parseMarkdoc } from "@lib/markdocHelpers";
import Link from "../nodes/Link.astro";
import type { APIContext } from "astro";
import { GlobalCache } from "@lib/globalCache";

export const contentLink = {
	render: "ContentLink",
	attributes: {
		label: {
			type: String,
		},
	},
};

// const renderedCode = await Astro.slots.render("default");
// const code = decodeURIComponent(renderedCode).trim();

const { label } = Astro.props;
const content = `memoirs_slug: ${label}`;

// TODO: Hack, for compatibility see https://docs.astro.build/en/reference/api-reference/#endpoint-context
const astro = Astro as unknown as APIContext;
Astro.props.content = content;

const resultList = await GlobalCache.getInstance().getMemoList(astro);
const firstMatch = resultList.memos ? resultList.memos[0] : null;
---

{
	firstMatch && (
		<span class="contentLink">
			<Link href={`/memo/${firstMatch.id}`}>{firstMatch.title}</Link>
		</span>
	)
}

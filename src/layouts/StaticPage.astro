---
import type { BaseLayoutProps } from "@lib/types";

import BaseLayout from "@layouts/BaseLayout.astro";
import Content404 from "@components/Content404.astro";
import BadgeLink from "@components/BadgeLink.astro";
import ContentRenderer from "@components/markdoc/render/ContentRenderer.astro";
import { GlobalCache } from "@lib/globalCache";
import type { APIContext } from "astro";

type Props = {
	baseProps: BaseLayoutProps;
	contentName: string;
	content?: string;

	[key: string]: unknown;
};

const { baseProps, contentName, ...restProps } = Astro.props;

// TODO: Hack, for compatibility see https://docs.astro.build/en/reference/api-reference/#endpoint-context
const astro = Astro as unknown as APIContext;

Astro.props.content = `memoirs_page: ${contentName}`;
Astro.props.filterPages = false;

const data = await GlobalCache.getInstance().getMemoList(astro);
const page = data.memos ? data.memos[0] : undefined;

const theBaseProps = {
	...baseProps,
	title: page?.title ?? "memoirs",
	description: page?.abstract ?? "A blogging service for usememos.com",
};
---

<BaseLayout {...theBaseProps}>
	{!page && <Content404 pageName={contentName} error={data.error} />}
	<main {...restProps}>
		{
			page && (
				<>
					<BadgeLink
						style="margin-top: var(--space-4);"
						text="Link to memos original page"
						href={`${
							GlobalCache.getInstance().getSystemURLs(astro)!.MemosSourceUrl
						}/${page.id}`}
					/>
					<ContentRenderer doc={page} />
				</>
			)
		}
	</main>
</BaseLayout>
